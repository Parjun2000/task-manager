definitions:
  handlers.Credentials:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  handlers.TaskDetails:
    properties:
      description:
        type: string
      status:
        type: string
      title:
        type: string
    type: object
  utils.Task:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      status:
        type: string
      title:
        type: string
      user_id:
        type: integer
    type: object
info:
  contact: {}
  description: This API allow users to create, read, update, and delete tasks. Users
    can register, log in, and access their own tasks only when authenticated.
  title: Go-Gin Task Manager API
  version: "1.0"
paths:
  /api/v1/auth/login:
    post:
      consumes:
      - application/json
      description: Login user with username and password
      parameters:
      - description: Username & Password
        in: body
        name: Credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.Credentials'
      responses:
        "200":
          description: User logged in successfully
          schema:
            properties:
              token:
                type: string
            type: object
        "400":
          description: Invalid JSON
          schema:
            properties:
              error:
                type: string
            type: object
        "401":
          description: Invalid credentials
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: User not found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal server error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Login user
      tags:
      - Register & Login
  /api/v1/auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user with username and password
      parameters:
      - description: Username & Password
        in: body
        name: Credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.Credentials'
      responses:
        "200":
          description: User registered successfully
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Invalid JSON
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal server error
          schema:
            properties:
              error:
                type: string
            type: object
      summary: Register a new user
      tags:
      - Register & Login
  /api/v1/tasks:
    get:
      consumes:
      - application/json
      description: Get tasks with pagination, sorting by status/created_at, and filtering
        by status
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Items per page
        in: query
        name: limit
        type: integer
      - description: Sort by title/status/description/created_at
        in: query
        name: sort_by
        type: string
      - description: 'Sort order: asc/desc'
        in: query
        name: order
        type: string
      - description: Filter by task status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/utils.Task'
            type: array
        "400":
          description: Error Message
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Failed to fetch tasks:Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - JWT: []
      summary: Get tasks with pagination, sorting, and filtering
      tags:
      - Tasks
    post:
      consumes:
      - application/json
      description: Create a new task
      parameters:
      - description: Task Details
        in: body
        name: TaskDetails
        required: true
        schema:
          $ref: '#/definitions/handlers.TaskDetails'
      responses:
        "200":
          description: Task created successfully
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Validation Error
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - JWT: []
      summary: Create a task
      tags:
      - Tasks
  /api/v1/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Task deleted successfully
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Invalid Task Id
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Task not found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Failed to delete task
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - JWT: []
      summary: Delete a task
      tags:
      - Tasks
    get:
      description: Get a task by its ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.Task'
        "404":
          description: Task not found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - JWT: []
      summary: Get task by ID
      tags:
      - Tasks
    put:
      consumes:
      - application/json
      description: Update an existing task by ID
      parameters:
      - description: Task ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated Task Details
        in: body
        name: TaskDetails
        required: true
        schema:
          $ref: '#/definitions/handlers.TaskDetails'
      responses:
        "200":
          description: Task updated successfully
          schema:
            properties:
              message:
                type: string
            type: object
        "400":
          description: Invalid Task Id
          schema:
            properties:
              error:
                type: string
            type: object
        "404":
          description: Task not found
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Failed to update task
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - JWT: []
      summary: Update a task
      tags:
      - Tasks
  /api/v1/tasks/mark-done:
    put:
      consumes:
      - application/json
      description: Mark multiple tasks as done concurrently using Goroutines
      parameters:
      - description: Task IDs to mark as done
        in: body
        name: task_ids
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            properties:
              message:
                type: string
              updated_tasks:
                items:
                  type: string
                type: array
            type: object
        "400":
          description: Invalid Task Id
          schema:
            properties:
              error:
                type: string
            type: object
        "500":
          description: Failed to Update task
          schema:
            properties:
              error:
                type: string
            type: object
      security:
      - JWT: []
      summary: Mark tasks as done concurrently
      tags:
      - Tasks
securityDefinitions:
  JWT:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
